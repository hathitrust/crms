#!/usr/bin/perl

# This script is used to generate the fixtures used by t/bib_rights.t.
# It need not be re-run unless coverage years or catalog records are added
# to the test suite. Depends on HathiTrust Bib API for cached MARC record fixtures.
# Creates a JSON file with the results of running the bib rights algorithm
# on a selection of representative catalog records. The results are to be considered
# authoritative for subsequent testing purposes.

use strict;
use warnings;

BEGIN {
  die "SDRROOT environment variable not set" unless defined $ENV{'SDRROOT'};
  use lib $ENV{'SDRROOT'} . '/crms/cgi';
  use lib $ENV{'SDRROOT'} . '/crms/post_zephir_processing';
}

use utf8;
binmode(STDOUT, ':encoding(UTF-8)');
use CRMS;
use Getopt::Long qw(:config no_ignore_case bundling);
use Encode;
#use Term::ANSIColor qw(:constants colored);
#$Term::ANSIColor::AUTORESET = 1;
#use Data::Dumper;
use JSON::XS;
use bib_rights;
use MARC::File::XML(BinaryEncoding => 'utf8');

my $usage = <<END;
USAGE: $0 [-h]

Generates test fixture for post_zephir_processing/bib_rights tests.

-h    Print this help message.
END

my $help;

Getopt::Long::Configure('bundling');
die 'Terminating' unless GetOptions(
           'h|?'  => \$help);

if ($help) { print $usage. "\n"; exit(0); }

my $crms = CRMS->new();
my @years = (2010, 2015, 2020, 2025, 2030);
my $tests = [
  ['mdp.39015086492272', 'CHECK_GOV NIST-NSRDS'],
  ['umn.31951d02932305y', 'CHECK_GOV NTIS'],
  ['mdp.39015062147791', 'CHECK_GOV armed forces comm assoc'],
  ['uc1.31822016975690', 'CHECK_GOV armed forces comm assoc (possible bug in RE?)'],
  ['chi.16700319', 'CHECK_GOV national research council'],
  # There is no "national research council canada" volume that is marked US fed doc.
  # select * from bib_rights_bi where f008 regexp '^.{28}f' and imprint RLIKE 'national.research.council.+canada' and f008 regexp '^.{17}u';
  # select * from bib_rights_bi where f008 regexp '^.{28}f' and imprint RLIKE 'canada.*national.research.council' and f008 regexp '^.{17}u';
  # artificial record used in test suite
  ['uc1.31822009441387', 'CHECK_GOV Smithsonian'],
  ['umn.319510028195022', 'CHECK_GOV national gallery of art'],
  ['njp.32101066807213', 'CHECK_GOV Federal Reserve'],
  
  ['njp.32101077883609', 'clean_pub_place nonalpha-space'],
  ['mdp.39015053274380', 'clean_pub_place pr -> pru (Puerto Rico)'],
  ['uc1.31158001472769', 'clean_pub_place us -> xxu'],
  
  ['mdp.39015015147864', 'clean_date with 008 date1 0000'],
  ['mdp.39015063938933', 'clean_date with 008 date2 0000'],

  ['mdp.39015054190924', 'getBibFmt CF'],
  ['mdp.39015011016204', 'getBibFmt VM'],
  ['mdp.39015010377565', 'getBibFmt MU'],
  ['uc1.32106000718277', 'getBibFmt MP'],
  ['mdp.39015006077963', 'getBibFmt SE'],
  ['ien.35558002752380', 'getBibFmt MX'],
  ['mdp.39015006077963', 'getBibFmt SE from bibLev "s"'],
  ['msu.31293023740404', 'getBibFmt XX'],
  ['nyp.33433066275540', 'getBibFmt XX'],
  ['nyp.33433066275524', 'getBibFmt XX'],

  ['pst.000071289526', 'imprint from 264'],
  ['mdp.39015021273407', 'multiple 260a'],
  ['pst.000071842134', 'no imprint'],
  ['mdp.39015012933928', 'CHECK IMPRINT: no $non_us_city'],
  # set_date tests
  ['uc1.31210013531445', "serial item date > max_vol_date"],
  ['chi.72612798', '$ri->{"date_type"} eq "t"'],
  ['chi.72612798', '$ri->{"date2"} and do { (true branch)'],
  ['inu.30000107650602', '$ri->{"date2"} and do { (false branch)'],
  ['inu.30000000227821', 'bib date1, date type m'],
  ['pst.000021158902', ''],
  ['iau.31858010524910', 'date type r--no date1'],
  ['coo.31924013324219', 'date type r--no date1 and date_munged'],
  ['chi.082894362', 'date type r--no date1 and date not munged'],
  ['mdp.35128001892007', 'date type "e"'],
  # No attested example for "date type e--no date1" -- artificial record used in test suite
  ['chi.086497447', 'bib date2'],
  ['coo.31924067228225', 'bib date1 munged'],
  ['uc1.32106020214307', 'no date--US fed doc'],
  ['wu.89095021135', 'no date'],
  # ===== get_bib_rights_info ========
  ['chi.086014697', "gov_pub='f' and pub_country!='u'"],
  ['inu.32000001027186', 'bib_info->{mult_260a_non_us} and $ri->{date_used} >= $self->{non_us_pd_cutoff_year}'],
  ['coo.31924000088058', '$bib_info->{mult_260a_non_us} and $ri->{date_used} >= $self->{non_us_pd_cutoff_year} and $ri->{date_used} >= $self->{us_pd_cutoff_year}'],
  ['chi.086132657', 'canada/australia bib date1 < 1902'],
  ['chi.084804371', 'canada/australia bib date1 between 1902 and 1927'],
  
  ['uiug.30112046498256', 'non-US bib date1, date type e between 1897 and 1927'],
  # ==== get_date ==== #
  ['miua.0054431.0007.001', 'umdl item descriptions may contain NNNN.NNN'],
  ['coo.31924077881971', 'check for tech report number formats'],
  ['mdp.39015024459466', '<space>NNNN-N<space>'],
];


my $test_struct = {};
my $fixtures_dir = $ENV{'SDRROOT'} . '/crms/t/fixtures/bib_rights/';
unless (-e $fixtures_dir) {
  `mkdir -p $fixtures_dir`;
}

# Create fake fed doc OCLC numbers file (only used in the last coverage tests)
my $oclc_file = $fixtures_dir . 'feddoc_oclc_nums.txt';
open my $fh, '>:utf8', $oclc_file or die "error opening $oclc_file: $!";
print $fh "0\n00\n000\n";
close $fh;

foreach my $test (@$tests) {
  my ($htid, $comment) = @$test;
  my $marc;
  my $xml;
  unless (defined $test_struct->{$htid}) {
    $test_struct->{$htid} = {id => $htid, comment => $comment, years => {}};
  }
  my $fixture = $fixtures_dir . $htid . ".xml";
  if (-e $fixture) {
    open my $fh, '<:utf8', $fixture or die "error opening $fixture: $!";
    $xml = do { local $/; <$fh> };
    close $fh;
  } else {
    my $record = $crms->GetMetadata($htid);
    if (!defined $record) {
      die "Unable to get metadata for $htid\n";
    }
    $xml = $record->xml;
    open my $fh, '>:utf8', $fixture or die "error opening $fixture: $!";
    print $fh $xml;
    close $fh;
  }
  eval { $marc = MARC::Record->new_from_xml($xml); };
  if ($@) {
    print STDERR "problem processing marc xml\n";
    warn $@;
    print STDERR "$xml\n";
    next;
  };
  foreach my $year ((2010, 2015, 2020, 2025, 2030)) {
    $ENV{BIB_RIGHTS_DATE} = $year;
    my $br = bib_rights->new();
    my $cid = $marc->field('001')->as_string();
    my $enumcron = extract_enumcron($marc, $htid);
    my $bib_info = $br->get_bib_info($marc, $cid);
    my $bri = $br->get_bib_rights_info($htid, $bib_info, $enumcron);
    $test_struct->{$htid}->{years}->{$year} = $bri->{attr};
  }
}

write_json($test_struct, 'bib_rights_tests.json');
gen_clean_pub_place_tests();

# Extract enumcron for HTID from MARC::Record 974z
sub extract_enumcron {
  my $marc = shift;
  my $htid = shift;
  
  my @fields = $marc->field('974');
  foreach my $field (@fields) {
    if ($htid eq $field->subfield('u')) {
      return $field->subfield('z') || '';
    }
  }
  return '';
}

# Write a structure to the fixtures directory.
sub write_json {
  my $struct = shift;
  my $file = shift;

  my $jsonxs = JSON::XS->new->utf8->canonical(1)->pretty(1);
  my $encdata = $jsonxs->encode($struct);
  my $fixture_file = $fixtures_dir . $file;
  open $fh, '>:utf8', $fixture_file or die "error opening $fixture_file: $!";
  print $fh $encdata;
  close $fh;
}

# Tests for normalization of all the random garbage that shows up in 008 pub_place fields.
# These are all the attested values and what bib_rights::clean_pub_place should produce.
# SELECT DISTINCT CONCAT("['",SUBSTR(f008,16,3),"','",pub_place,"'],") AS s FROM bib_rights_bi ORDER BY s;
sub gen_clean_pub_place_tests {
  my $tests = [
    ['   ','   '],
    ['  #','  #'],
    ['  c','  c'],
    ['  i','  i'],
    ['  r','  r'],
    ['  s','  s'],
    ['  u','  u'],
    [' 0 ','   '],
    [' 00','   '],
    [' 10','   '],
    [' 40','   '],
    [' a ',' a '],
    [' b ',' b '],
    [' bc',' bc'],
    [' bd',' bd'],
    [' be',' be'],
    [' c ',' c '],
    [' dk',' dk'],
    [' e ',' e '],
    [' en',' en'],
    [' f ',' f '],
    [' f0',' f0'],
    [' fr',' fr'],
    [' ge',' ge'],
    [' gw',' gw'],
    [' id',' id'],
    [' j ',' j '],
    [' ke',' ke'],
    [' l ',' l '],
    [' l0',' l0'],
    [' nd',' nd'],
    [' nj',' nj'],
    [' np',' np'],
    [' ny',' ny'],
    [' o0',' o0'],
    [' pl',' pl'],
    [' ru',' ru'],
    [' s0',' s0'],
    [' sz',' sz'],
    [' uk',' uk'],
    [' ur',' ur'],
    [' x ',' x '],
    [' xx',' xx'],
    [' yu',' yu'],
    [' \U','   '],
    ['-cn','   '],
    ['-cs','   '],
    ['-na','   '],
    ['000','   '],
    ['001','   '],
    ['01 ','   '],
    ['0w ','   '],
    ['1  ','   '],
    ['100','   '],
    ['101','   '],
    ['176','   '],
    ['186','   '],
    ['188','   '],
    ['189','   '],
    ['191','   '],
    ['1au','   '],
    ['1ge','   '],
    ['1nk','   '],
    ['1t ','   '],
    ['33 ','   '],
    ['3en','   '],
    ['61|','   '],
    ['7) ','   '],
    ['7fr','   '],
    ['9  ','   '],
    ['930','   '],
    ['933','   '],
    ['953','   '],
    ['958','   '],
    ['962','   '],
    ['966','   '],
    ['967','   '],
    ['969','   '],
    ['970','   '],
    ['972','   '],
    ['973','   '],
    ['974','   '],
    ['?? ','   '],
    ['???','   '],
    ['@@@','   '],
    ['a  ','a  '],
    ['a #','a #'],
    ['a 0','a 0'],
    ['a 1','a 1'],
    ['a a','a a'],
    ['a b','a b'],
    ['a c','a c'],
    ['a d','a d'],
    ['a f','a f'],
    ['a o','a o'],
    ['a r','a r'],
    ['a s','a s'],
    ['aa ','aa '],
    ['aa#','aa#'],
    ['aaa','aaa'],
    ['aar','aar'],
    ['ab ','ab '],
    ['abc','abc'],
    ['abd','abd'],
    ['abe','abe'],
    ['abf','abf'],
    ['abm','abm'],
    ['abu','abu'],
    ['ac ','ac '],
    ['aca','aca'],
    ['acd','acd'],
    ['ace','ace'],
    ['acf','acf'],
    ['acg','acg'],
    ['ach','ach'],
    ['acu','acu'],
    ['ad ','ad '],
    ['adf','adf'],
    ['adg','adg'],
    ['ae ','ae '],
    ['ae#','ae#'],
    ['aef','aef'],
    ['aeh','aeh'],
    ['af ','af '],
    ['af#','af#'],
    ['afc','afc'],
    ['afe','afe'],
    ['afg','afg'],
    ['afh','afh'],
    ['afj','afj'],
    ['afo','afo'],
    ['afr','afr'],
    ['ag ','ag '],
    ['ag#','ag#'],
    ['agc','agc'],
    ['agr','agr'],
    ['agx','agx'],
    ['ah ','ah '],
    ['ahu','ahu'],
    ['ai ','ai '],
    ['air','air'],
    ['aj ','aj '],
    ['ajr','ajr'],
    ['aju','aju'],
    ['ak ','ak '],
    ['ak#','ak#'],
    ['aku','aku'],
    ['akv','akv'],
    ['al ','al '],
    ['ala','ala'],
    ['alc','alc'],
    ['alu','alu'],
    ['am ','am '],
    ['amh','amh'],
    ['ams','ams'],
    ['an ','an '],
    ['anc','anc'],
    ['ank','ank'],
    ['ann','ann'],
    ['ao ','ao '],
    ['ao#','ao#'],
    ['apu','apu'],
    ['aq ','aq '],
    ['aq#','aq#'],
    ['ar ','ar '],
    ['ara','ara'],
    ['are','are'],
    ['arg','arg'],
    ['ark','ark'],
    ['arr','arr'],
    ['aru','aru'],
    ['as ','as '],
    ['asu','asu'],
    ['at ','at '],
    ['at#','at#'],
    ['at?','at '],
    ['atk','atk'],
    ['atq','atq'],
    ['atu','atu'],
    ['au ','au '],
    ['au#','au#'],
    ['aua','aua'],
    ['aub','aub'],
    ['auc','auc'],
    ['aum','aum'],
    ['aus','aus'],
    ['aut','aut'],
    ['auu','auu'],
    ['av ','av '],
    ['aw ','aw '],
    ['ay ','ay '],
    ['ayu','ayu'],
    ['az ','az '],
    ['az#','az#'],
    ['azr','azr'],
    ['azu','azu'],
    ['b  ','b  '],
    ['b 0','b 0'],
    ['b b','b b'],
    ['b c','b c'],
    ['b f','b f'],
    ['ba ','ba '],
    ['ba#','ba#'],
    ['baf','baf'],
    ['bau','bau'],
    ['bb ','bb '],
    ['bb#','bb#'],
    ['bbc','bbc'],
    ['bc ','bc '],
    ['bcc','bcc'],
    ['bcu','bcu'],
    ['bd ','bd '],
    ['be ','be '],
    ['be#','be#'],
    ['bee','bee'],
    ['bef','bef'],
    ['bel','bel'],
    ['ber','ber'],
    ['bf ','bf '],
    ['bf#','bf#'],
    ['bg ','bg '],
    ['bg#','bg#'],
    ['bh ','bh '],
    ['bh#','bh#'],
    ['bi ','bi '],
    ['bk ','bk '],
    ['bl ','bl '],
    ['bl#','bl#'],
    ['bl|','bl '],
    ['bm ','bm '],
    ['bm#','bm#'],
    ['bn ','bn '],
    ['bny','bny'],
    ['bo ','bo '],
    ['bo#','bo#'],
    ['bos','bos'],
    ['bou','bou'],
    ['bp ','bp '],
    ['bp#','bp#'],
    ['bq ','bq '],
    ['br ','br '],
    ['br#','br#'],
    ['bru','bru'],
    ['bs ','bs '],
    ['bs#','bs#'],
    ['bt ','bt '],
    ['bt#','bt#'],
    ['bu ','bu '],
    ['bu#','bu#'],
    ['bub','bub'],
    ['bul','bul'],
    ['bur','bur'],
    ['bv ','bv '],
    ['bvr','bvr'],
    ['bw ','bw '],
    ['bw#','bw#'],
    ['bwr','bwr'],
    ['bx ','bx '],
    ['by ','by '],
    ['byu','byu'],
    ['bz ','bz '],
    ['c  ','c  '],
    ['c 0','c 0'],
    ['c b','c b'],
    ['c c','c c'],
    ['ca ','ca '],
    ['cak','cak'],
    ['cal','cal'],
    ['can','can'],
    ['cao','cao'],
    ['caq','caq'],
    ['cat','cat'],
    ['cau','cau'],
    ['cav','cav'],
    ['caw','caw'],
    ['cay','cay'],
    ['cb ','cb '],
    ['cb#','cb#'],
    ['cbc','cbc'],
    ['cbu','cbu'],
    ['cc ','cc '],
    ['cc#','cc#'],
    ['ccc','ccc'],
    ['ccu','ccu'],
    ['cd ','cd '],
    ['cdu','cdu'],
    ['ce ','ce '],
    ['ce#','ce#'],
    ['cef','cef'],
    ['ceq','ceq'],
    ['ces','ces'],
    ['cf ','cf '],
    ['cf#','cf#'],
    ['cfh','cfh'],
    ['cfj','cfj'],
    ['cfu','cfu'],
    ['cg ','cg '],
    ['cg#','cg#'],
    ['ch ','ch '],
    ['ch#','ch#'],
    ['chi','chi'],
    ['chu','chu'],
    ['ci ','ci '],
    ['ci#','ci#'],
    ['cia','cia'],
    ['cj ','cj '],
    ['ck ','ck '],
    ['ck#','ck#'],
    ['cl ','cl '],
    ['cl#','cl#'],
    ['clt','clt'],
    ['clu','clu'],
    ['cm ','cm '],
    ['cm#','cm#'],
    ['cn ','cn '],
    ['cn#','cn#'],
    ['cnc','cnc'],
    ['cnk','cnk'],
    ['cnn','cnn'],
    ['cnu','cnu'],
    ['co ','co '],
    ['col','col'],
    ['con','con'],
    ['cou','cou'],
    ['cov','cov'],
    ['cp ','cp '],
    ['cq ','cq '],
    ['cr ','cr '],
    ['cr#','cr#'],
    ['cs ','cs '],
    ['cs#','cs#'],
    ['cse','cse'],
    ['csr','csr'],
    ['ct ','ct '],
    ['cta','cta'],
    ['cti','cti'],
    ['ctn','ctn'],
    ['ctu','ctu'],
    ['ctv','ctv'],
    ['ctw','ctw'],
    ['cty','cty'],
    ['cu ','cu '],
    ['cu#','cu#'],
    ['cuu','cuu'],
    ['cv ','cv '],
    ['cv#','cv#'],
    ['cw ','cw '],
    ['cwr','cwr'],
    ['cx ','cx '],
    ['cy ','cy '],
    ['cy#','cy#'],
    ['cyu','cyu'],
    ['cz ','cz '],
    ['cz#','cz#'],
    ['cze','cze'],
    ['czu','czu'],
    ['c\U','   '],
    ['d  ','d  '],
    ['d 0','d 0'],
    ['da ','da '],
    ['dai','dai'],
    ['dan','dan'],
    ['dar','dar'],
    ['dau','dau'],
    ['dc ','dc '],
    ['dca','dca'],
    ['dcc','dcc'],
    ['dci','dci'],
    ['dck','dck'],
    ['dcn','dcn'],
    ['dcu','dcu'],
    ['dcv','dcv'],
    ['dcw','dcw'],
    ['de ','de '],
    ['de#','de#'],
    ['den','den'],
    ['deu','deu'],
    ['dew','dew'],
    ['di ','di '],
    ['dk ','dk '],
    ['dk#','dk#'],
    ['dkg','dkg'],
    ['dku','dku'],
    ['dlc','dlc'],
    ['dlu','dlu'],
    ['dm ','dm '],
    ['dm#','dm#'],
    ['dn ','dn '],
    ['dnc','dnc'],
    ['dnu','dnu'],
    ['dom','dom'],
    ['dq ','dq '],
    ['dr ','dr '],
    ['dr#','dr#'],
    ['dru','dru'],
    ['dt ','dt '],
    ['du ','du '],
    ['duc','duc'],
    ['dur','dur'],
    ['dut','dut'],
    ['dw ','dw '],
    ['e  ','e  '],
    ['e 0','e 0'],
    ['e b','e b'],
    ['e c','e c'],
    ['ea ','ea '],
    ['eak','eak'],
    ['eau','eau'],
    ['eb ','eb '],
    ['eb#','eb#'],
    ['ebk','ebk'],
    ['ec ','ec '],
    ['ec#','ec#'],
    ['edi','edi'],
    ['eei','eei'],
    ['ef ','ef '],
    ['efj','efj'],
    ['eg ','eg '],
    ['eg#','eg#'],
    ['egk','egk'],
    ['ei ','ei '],
    ['ek ','ek '],
    ['eku','eku'],
    ['el ','el '],
    ['em ','em '],
    ['eml','eml'],
    ['en ','en '],
    ['en#','en#'],
    ['enb','enb'],
    ['enc','enc'],
    ['eng','eng'],
    ['enh','enh'],
    ['enk','enk'],
    ['enl','enl'],
    ['enm','enm'],
    ['enn','enn'],
    ['enu','enu'],
    ['ep ','ep '],
    ['er ','er '],
    ['er#','er#'],
    ['err','err'],
    ['erv','erv'],
    ['es ','es '],
    ['es#','es#'],
    ['esk','esk'],
    ['esp','esp'],
    ['esr','esr'],
    ['est','est'],
    ['et ','et '],
    ['et#','et#'],
    ['etu','etu'],
    ['eu ','eu '],
    ['eue','eue'],
    ['euk','euk'],
    ['ev ','ev '],
    ['evr','evr'],
    ['exx','exx'],
    ['ey ','ey '],
    ['eyu','eyu'],
    ['f  ','f  '],
    ['f 0','f 0'],
    ['f b','f b'],
    ['f c','f c'],
    ['f f','f f'],
    ['f j','f j'],
    ['f00','   '],
    ['fa ','fa '],
    ['fae','fae'],
    ['fau','fau'],
    ['fc ','fc '],
    ['fe ','fe '],
    ['fff','fff'],
    ['fg ','fg '],
    ['fh ','fh '],
    ['fi ','fi '],
    ['fi#','fi#'],
    ['fin','fin'],
    ['fir','fir'],
    ['fiu','fiu'],
    ['fj ','fj '],
    ['fj#','fj#'],
    ['fk ','fk '],
    ['fl ','fl '],
    ['fla','fla'],
    ['fln','fln'],
    ['flu','flu'],
    ['fm ','fm '],
    ['fn ','fn '],
    ['fnu','fnu'],
    ['fp ','fp '],
    ['fr ','fr '],
    ['fr#','fr#'],
    ['fr0','fr0'],
    ['fra','fra'],
    ['frc','frc'],
    ['fre','fre'],
    ['frk','frk'],
    ['fro','fro'],
    ['frq','frq'],
    ['frs','frs'],
    ['fru','fru'],
    ['fr^','fr '],
    ['fs ','fs '],
    ['ft ','ft '],
    ['fu ','fu '],
    ['fv ','fv '],
    ['fw ','fw '],
    ['fw#','fw#'],
    ['fxu','fxu'],
    ['g  ','g  '],
    ['ga ','ga '],
    ['gau','gau'],
    ['gav','gav'],
    ['gaw','gaw'],
    ['gb ','gb '],
    ['gc ','gc '],
    ['gd ','gd '],
    ['gd#','gd#'],
    ['ge ','ge '],
    ['ge#','ge#'],
    ['ge*','ge*'],
    ['geg','geg'],
    ['gen','gen'],
    ['geo','geo'],
    ['ger','ger'],
    ['ges','ges'],
    ['geu','geu'],
    ['gev','gev'],
    ['gew','gew'],
    ['gg ','gg '],
    ['gh ','gh '],
    ['gh#','gh#'],
    ['ghg','ghg'],
    ['gi ','gi '],
    ['gi#','gi#'],
    ['giu','giu'],
    ['gk ','gk '],
    ['gl ','gl '],
    ['gl#','gl#'],
    ['gm ','gm '],
    ['gmu','gmu'],
    ['gn ','gn '],
    ['go ','go '],
    ['go#','go#'],
    ['gp ','gp '],
    ['gq ','gq '],
    ['gr ','gr '],
    ['gr#','gr#'],
    ['grc','grc'],
    ['grm','grm'],
    ['gro','gro'],
    ['grr','grr'],
    ['gru','gru'],
    ['grw','grw'],
    ['gs ','gs '],
    ['gs#','gs#'],
    ['gsr','gsr'],
    ['gsu','gsu'],
    ['gt ','gt '],
    ['gt#','gt#'],
    ['gtu','gtu'],
    ['gtw','gtw'],
    ['gu ','gu '],
    ['gu#','gu#'],
    ['gua','gua'],
    ['guc','guc'],
    ['gul','gul'],
    ['gur','gur'],
    ['gus','gus'],
    ['guu','guu'],
    ['gv ','gv '],
    ['gv#','gv#'],
    ['gvq','gvq'],
    ['gw ','gw '],
    ['gw#','gw#'],
    ['gwb','gwb'],
    ['gwq','gwq'],
    ['gws','gws'],
    ['gwu','gwu'],
    ['gwx','gwx'],
    ['gw^','gw '],
    ['gx ','gx '],
    ['gx#','gx#'],
    ['gy ','gy '],
    ['gy#','gy#'],
    ['gz ','gz '],
    ['gzr','gzr'],
    ['h  ','h  '],
    ['h 0','h 0'],
    ['ha ','ha '],
    ['ha#','ha#'],
    ['han','han'],
    ['hau','hau'],
    ['hbu','hbu'],
    ['he ','he '],
    ['hi ','hi '],
    ['hi#','hi#'],
    ['hin','hin'],
    ['hiu','hiu'],
    ['hju','hju'],
    ['hk ','hk '],
    ['hk#','hk#'],
    ['hkk','hkk'],
    ['hls','hls'],
    ['hn ','hn '],
    ['ho ','ho '],
    ['ho#','ho#'],
    ['hp ','hp '],
    ['hr ','hr '],
    ['ht ','ht '],
    ['ht#','ht#'],
    ['hu ','hu '],
    ['hu#','hu#'],
    ['huc','huc'],
    ['hui','hui'],
    ['hun','hun'],
    ['huq','huq'],
    ['hur','hur'],
    ['hy ','hy '],
    ['hya','hya'],
    ['hyu','hyu'],
    ['i  ','i  '],
    ['i 0','i 0'],
    ['i u','i u'],
    ['ia ','ia '],
    ['ian','ian'],
    ['iau','iau'],
    ['iav','iav'],
    ['iaw','iaw'],
    ['ic ','ic '],
    ['ic#','ic#'],
    ['id ','id '],
    ['ida','ida'],
    ['idu','idu'],
    ['ie ','ie '],
    ['ie#','ie#'],
    ['iek','iek'],
    ['ieu','ieu'],
    ['ie^','ie '],
    ['igu','igu'],
    ['ih ','ih '],
    ['ihi','ihi'],
    ['ihu','ihu'],
    ['ii ','ii '],
    ['ii#','ii#'],
    ['iii','iii'],
    ['iiq','iiq'],
    ['iis','iis'],
    ['iiu','iiu'],
    ['iju','iju'],
    ['il ','il '],
    ['il#','il#'],
    ['ila','ila'],
    ['ill','ill'],
    ['ilo','ilo'],
    ['ilu','ilu'],
    ['ilv','ilv'],
    ['ilw','ilw'],
    ['ily','ily'],
    ['im ','im '],
    ['imu','imu'],
    ['in ','in '],
    ['ina','ina'],
    ['inc','inc'],
    ['ind','ind'],
    ['inj','inj'],
    ['ink','ink'],
    ['inr','inr'],
    ['inu','inu'],
    ['inv','inv'],
    ['inw','inw'],
    ['inx','inx'],
    ['io ','io '],
    ['io#','io#'],
    ['ioa','ioa'],
    ['ioq','ioq'],
    ['iou','iou'],
    ['iow','iow'],
    ['iq ','iq '],
    ['iq#','iq#'],
    ['ir ','ir '],
    ['ir#','ir#'],
    ['ire','ire'],
    ['irk','irk'],
    ['iru','iru'],
    ['is ','is '],
    ['is#','is#'],
    ['isq','isq'],
    ['isr','isr'],
    ['isu','isu'],
    ['it ','it '],
    ['it#','it#'],
    ['it-','it-'],
    ['it/','it/'],
    ['it?','it '],
    ['ita','ita'],
    ['ite','ite'],
    ['itk','itk'],
    ['itu','itu'],
    ['iu ','iu '],
    ['iur','iur'],
    ['iuu','iuu'],
    ['iv ','iv '],
    ['iv#','iv#'],
    ['ivr','ivr'],
    ['iw ','iw '],
    ['iwu','iwu'],
    ['ix ','ix '],
    ['iy ','iy '],
    ['iz ','iz '],
    ['j  ','j  '],
    ['j 0','j 0'],
    ['ja ','ja '],
    ['ja#','ja#'],
    ['jap','jap'],
    ['jaq','jaq'],
    ['jau','jau'],
    ['jd ','jd '],
    ['ji ','ji '],
    ['jm ','jm '],
    ['jm#','jm#'],
    ['jn ','jn '],
    ['jo ','jo '],
    ['jo#','jo#'],
    ['jou','jou'],
    ['jp ','jp '],
    ['jpn','jpn'],
    ['ju ','ju '],
    ['k  ','k  '],
    ['k 0','k 0'],
    ['kau','kau'],
    ['kcu','kcu'],
    ['ke ','ke '],
    ['ke#','ke#'],
    ['keu','keu'],
    ['kg ','kg '],
    ['kg#','kg#'],
    ['kgr','kgr'],
    ['ki ','ki '],
    ['kn ','kn '],
    ['knu','knu'],
    ['ko ','ko '],
    ['ko#','ko#'],
    ['kor','kor'],
    ['kr ','kr '],
    ['krz','krz'],
    ['ks ','ks '],
    ['ks#','ks#'],
    ['ksa','ksa'],
    ['ksr','ksr'],
    ['ksu','ksu'],
    ['ksv','ksv'],
    ['ksy','ksy'],
    ['ktu','ktu'],
    ['ku ','ku '],
    ['ku#','ku#'],
    ['kv ','kv '],
    ['kw ','kw '],
    ['ky ','ky '],
    ['kyn','kyn'],
    ['kyu','kyu'],
    ['kz ','kz '],
    ['kz1','kz1'],
    ['kzr','kzr'],
    ['kzu','kzu'],
    ['l  ','l  '],
    ['l 0','l 0'],
    ['la ','la '],
    ['la#','la#'],
    ['lan','lan'],
    ['lat','lat'],
    ['lau','lau'],
    ['lav','lav'],
    ['lb ','lb '],
    ['lb#','lb#'],
    ['lbu','lbu'],
    ['lc ','lc '],
    ['ldn','ldn'],
    ['le ','le '],
    ['le#','le#'],
    ['leb','leb'],
    ['lee','lee'],
    ['leg','leg'],
    ['lei','lei'],
    ['lek','lek'],
    ['leq','leq'],
    ['lh ','lh '],
    ['lh#','lh#'],
    ['lhc','lhc'],
    ['li ','li '],
    ['li#','li#'],
    ['lir','lir'],
    ['lit','lit'],
    ['liu','liu'],
    ['liv','liv'],
    ['llu','llu'],
    ['ln ','ln '],
    ['ln*','ln*'],
    ['lnn','lnn'],
    ['lo ','lo '],
    ['lo#','lo#'],
    ['lok','lok'],
    ['lou','lou'],
    ['lp ','lp '],
    ['lq ','lq '],
    ['ls ','ls '],
    ['lsu','lsu'],
    ['lu ','lu '],
    ['lu#','lu#'],
    ['luk','luk'],
    ['lur','lur'],
    ['luu','luu'],
    ['lux','lux'],
    ['lv ','lv '],
    ['lv#','lv#'],
    ['lvr','lvr'],
    ['lwr','lwr'],
    ['ly ','ly '],
    ['ly#','ly#'],
    ['lyc','lyc'],
    ['m  ','m  '],
    ['m 0','m 0'],
    ['m u','m u'],
    ['ma ','ma '],
    ['ma#','ma#'],
    ['mac','mac'],
    ['man','man'],
    ['mar','mar'],
    ['mas','mas'],
    ['mau','mau'],
    ['mav','mav'],
    ['maw','maw'],
    ['may','may'],
    ['mb ','mb '],
    ['mb#','mb#'],
    ['mbc','mbc'],
    ['mbd','mbd'],
    ['mbk','mbk'],
    ['mbu','mbu'],
    ['mc ','mc '],
    ['mc#','mc#'],
    ['mcu','mcu'],
    ['md ','md '],
    ['mdn','mdn'],
    ['mdu','mdu'],
    ['mdw','mdw'],
    ['me ','me '],
    ['men','men'],
    ['meu','meu'],
    ['mex','mex'],
    ['mf ','mf '],
    ['mf#','mf#'],
    ['mg ','mg '],
    ['mg#','mg#'],
    ['mgu','mgu'],
    ['mh ','mh '],
    ['mi ','mi '],
    ['mi#','mi#'],
    ['mia','mia'],
    ['mic','mic'],
    ['min','min'],
    ['mir','mir'],
    ['mis','mis'],
    ['miu','miu'],
    ['miv','miv'],
    ['miw','miw'],
    ['mix','mix'],
    ['miy','miy'],
    ['mj ','mj '],
    ['mju','mju'],
    ['mk ','mk '],
    ['mk#','mk#'],
    ['mku','mku'],
    ['ml ','ml '],
    ['ml#','ml#'],
    ['mlk','mlk'],
    ['mlu','mlu'],
    ['mm ','mm '],
    ['mm#','mm#'],
    ['mmu','mmu'],
    ['mn ','mn '],
    ['mn#','mn#'],
    ['mnc','mnc'],
    ['mni','mni'],
    ['mnu','mnu'],
    ['mnv','mnv'],
    ['mny','mny'],
    ['mo ','mo '],
    ['moc','moc'],
    ['mol','mol'],
    ['mon','mon'],
    ['mou','mou'],
    ['mov','mov'],
    ['mow','mow'],
    ['moy','moy'],
    ['mp ','mp '],
    ['mp#','mp#'],
    ['mq ','mq '],
    ['mr ','mr '],
    ['mr#','mr#'],
    ['mru','mru'],
    ['mrv','mrv'],
    ['ms ','ms '],
    ['msu','msu'],
    ['mt ','mt '],
    ['mtu','mtu'],
    ['mu ','mu '],
    ['mua','mua'],
    ['mui','mui'],
    ['mul','mul'],
    ['mun','mun'],
    ['mur','mur'],
    ['mv ','mv '],
    ['mvr','mvr'],
    ['mvu','mvu'],
    ['mw ','mw '],
    ['mw#','mw#'],
    ['mx ','mx '],
    ['mx#','mx#'],
    ['mxu','mxu'],
    ['mx|','mx '],
    ['my ','my '],
    ['my#','my#'],
    ['myi','myi'],
    ['myr','myr'],
    ['myu','myu'],
    ['myw','myw'],
    ['mz ','mz '],
    ['mz#','mz#'],
    ['n  ','n  '],
    ['na ','na '],
    ['na#','na#'],
    ['nau','nau'],
    ['nb ','nb '],
    ['nb#','nb#'],
    ['nbc','nbc'],
    ['nbe','nbe'],
    ['nbk','nbk'],
    ['nbu','nbu'],
    ['nc ','nc '],
    ['ncc','ncc'],
    ['ncu','ncu'],
    ['ncv','ncv'],
    ['ncw','ncw'],
    ['nd ','nd '],
    ['ndu','ndu'],
    ['ndw','ndw'],
    ['ne ','ne '],
    ['ne#','ne#'],
    ['nea','nea'],
    ['neb','neb'],
    ['ned','ned'],
    ['nei','nei'],
    ['nes','nes'],
    ['net','net'],
    ['neu','neu'],
    ['new','new'],
    ['nf ','nf '],
    ['nfc','nfc'],
    ['ng ','ng '],
    ['ng#','ng#'],
    ['ngu','ngu'],
    ['nh ','nh '],
    ['nhu','nhu'],
    ['ni ','ni '],
    ['nik','nik'],
    ['niu','niu'],
    ['niw','niw'],
    ['nj ','nj '],
    ['njr','njr'],
    ['nju','nju'],
    ['njv','njv'],
    ['njy','njy'],
    ['nk ','nk '],
    ['nkc','nkc'],
    ['nku','nku'],
    ['nl ','nl '],
    ['nl#','nl#'],
    ['nm ','nm '],
    ['nm#','nm#'],
    ['nmn','nmn'],
    ['nmu','nmu'],
    ['nn ','nn '],
    ['nn#','nn#'],
    ['nnk','nnk'],
    ['nnu','nnu'],
    ['nny','nny'],
    ['no ','no '],
    ['no#','no#'],
    ['nor','nor'],
    ['nou','nou'],
    ['np ','np '],
    ['np#','np#'],
    ['npq','npq'],
    ['npu','npu'],
    ['nq ','nq '],
    ['nq#','nq#'],
    ['nr ','nr '],
    ['nr#','nr#'],
    ['nru','nru'],
    ['ns ','ns '],
    ['nsc','nsc'],
    ['nse','nse'],
    ['nsk','nsk'],
    ['nss','nss'],
    ['nsu','nsu'],
    ['nt ','nt '],
    ['ntc','ntc'],
    ['ntu','ntu'],
    ['nu ','nu '],
    ['nu#','nu#'],
    ['nuc','nuc'],
    ['nuj','nuj'],
    ['nur','nur'],
    ['nuu','nuu'],
    ['nuy','nuy'],
    ['nv ','nv '],
    ['nvu','nvu'],
    ['nw ','nw '],
    ['nwi','nwi'],
    ['nx ','nx '],
    ['nxc','nxc'],
    ['nxu','nxu'],
    ['ny ','ny '],
    ['ny#','ny#'],
    ['nya','nya'],
    ['nyc','nyc'],
    ['nye','nye'],
    ['nyj','nyj'],
    ['nyk','nyk'],
    ['nyn','nyn'],
    ['nyo','nyo'],
    ['nyr','nyr'],
    ['nys','nys'],
    ['nyu','nyu'],
    ['nyv','nyv'],
    ['nyw','nyw'],
    ['nz ','nz '],
    ['nz#','nz#'],
    ['nzk','nzk'],
    ['nzu','nzu'],
    ['o  ','o  '],
    ['o 0','o 0'],
    ['o u','o u'],
    ['o00','   '],
    ['oau','oau'],
    ['obu','obu'],
    ['occ','occ'],
    ['ocn','ocn'],
    ['ocu','ocu'],
    ['ofu','ofu'],
    ['oh ','oh '],
    ['ohc','ohc'],
    ['ohe','ohe'],
    ['ohk','ohk'],
    ['ohn','ohn'],
    ['ohu','ohu'],
    ['ohv','ohv'],
    ['ohw','ohw'],
    ['ohy','ohy'],
    ['oiu','oiu'],
    ['ok ','ok '],
    ['oku','oku'],
    ['okv','okv'],
    ['olu','olu'],
    ['olw','olw'],
    ['omc','omc'],
    ['on ','on '],
    ['onc','onc'],
    ['ond','ond'],
    ['one','one'],
    ['onk','onk'],
    ['ont','ont'],
    ['onu','onu'],
    ['oo ','oo '],
    ['or ','or '],
    ['ora','ora'],
    ['orc','orc'],
    ['ore','ore'],
    ['orr','orr'],
    ['oru','oru'],
    ['orv','orv'],
    ['ot ','ot '],
    ['otc','otc'],
    ['otu','otu'],
    ['ouc','ouc'],
    ['oui','oui'],
    ['our','our'],
    ['ovu','ovu'],
    ['p  ','p  '],
    ['pa ','pa '],
    ['paa','paa'],
    ['pac','pac'],
    ['pai','pai'],
    ['pak','pak'],
    ['pan','pan'],
    ['pao','pao'],
    ['par','par'],
    ['pau','pau'],
    ['pav','pav'],
    ['paw','paw'],
    ['pay','pay'],
    ['pb ','pb '],
    ['pc ','pc '],
    ['pci','pci'],
    ['pcu','pcu'],
    ['pdu','pdu'],
    ['pe ','pe '],
    ['pe#','pe#'],
    ['per','per'],
    ['peu','peu'],
    ['pf ','pf '],
    ['pg ','pg '],
    ['pg#','pg#'],
    ['ph ','ph '],
    ['ph#','ph#'],
    ['phi','phi'],
    ['phq','phq'],
    ['phu','phu'],
    ['phy','phy'],
    ['pi ','pi '],
    ['pic','pic'],
    ['pit','pit'],
    ['pk ','pk '],
    ['pk#','pk#'],
    ['pki','pki'],
    ['pkq','pkq'],
    ['pl ','pl '],
    ['pl#','pl#'],
    ['pl/','pl/'],
    ['plc','plc'],
    ['pls','pls'],
    ['plu','plu'],
    ['pmc','pmc'],
    ['pn ','pn '],
    ['pn#','pn#'],
    ['pnu','pnu'],
    ['po ','po '],
    ['po#','po#'],
    ['pok','pok'],
    ['pol','pol'],
    ['pop','pop'],
    ['por','por'],
    ['pou','pou'],
    ['pp ','pp '],
    ['pp#','pp#'],
    ['ppa','ppa'],
    ['ppu','ppu'],
    ['pqu','pqu'],
    ['pr ','pru'],
    ['pr#','pru'],
    ['pru','pru'],
    ['ps ','ps '],
    ['pt ','pt '],
    ['pu ','pu '],
    ['pvr','pvr'],
    ['pw ','pw '],
    ['py ','py '],
    ['py#','py#'],
    ['p|u','p u'],
    ['qa ','qa '],
    ['qa#','qa#'],
    ['qau','qau'],
    ['qbc','qbc'],
    ['qcc','qcc'],
    ['qe ','qe '],
    ['qea','qea'],
    ['qg ','qg '],
    ['qic','qic'],
    ['qld','qld'],
    ['qnc','qnc'],
    ['qu ','qu '],
    ['quc','quc'],
    ['que','que'],
    ['quo','quo'],
    ['qw ','qw '],
    ['qwc','qwc'],
    ['qyu','qyu'],
    ['r  ','r  '],
    ['r 0','r 0'],
    ['r a','r a'],
    ['rar','rar'],
    ['rau','rau'],
    ['rb ','rb '],
    ['rbu','rbu'],
    ['rcu','rcu'],
    ['re ','re '],
    ['rf ','rf '],
    ['rh ','rh '],
    ['rh#','rh#'],
    ['rhk','rhk'],
    ['rhu','rhu'],
    ['ri ','ri '],
    ['rin','rin'],
    ['riu','riu'],
    ['rju','rju'],
    ['rk ','rk '],
    ['rm ','rm '],
    ['rm#','rm#'],
    ['rmr','rmr'],
    ['rmu','rmu'],
    ['rn ','rn '],
    ['ro ','ro '],
    ['rr ','rr '],
    ['rs ','rs '],
    ['rtu','rtu'],
    ['ru ','ru '],
    ['ru#','ru#'],
    ['rud','rud'],
    ['rui','rui'],
    ['rum','rum'],
    ['rur','rur'],
    ['rus','rus'],
    ['rut','rut'],
    ['ruu','ruu'],
    ['ruv','ruv'],
    ['rw ','rw '],
    ['rw#','rw#'],
    ['rx ','rx '],
    ['ryu','ryu'],
    ['rz ','rz '],
    ['rzr','rzr'],
    ['s  ','s  '],
    ['s 0','s 0'],
    ['s f','s f'],
    ['sa ','sa '],
    ['sa#','sa#'],
    ['sam','sam'],
    ['sau','sau'],
    ['sb ','sb '],
    ['sbu','sbu'],
    ['sc ','sc '],
    ['sck','sck'],
    ['scn','scn'],
    ['scr','scr'],
    ['sct','sct'],
    ['scu','scu'],
    ['sd ','sd '],
    ['sdu','sdu'],
    ['se ','se '],
    ['se#','se#'],
    ['sf ','sf '],
    ['sfk','sfk'],
    ['sg ','sg '],
    ['sg#','sg#'],
    ['sh ','sh '],
    ['shu','shu'],
    ['si ','si '],
    ['si#','si#'],
    ['sj ','sj '],
    ['sj#','sj#'],
    ['sk ','sk '],
    ['sk#','sk#'],
    ['skc','skc'],
    ['skt','skt'],
    ['sl ','sl '],
    ['sl#','sl#'],
    ['slc','slc'],
    ['slk','slk'],
    ['slu','slu'],
    ['slv','slv'],
    ['sm ','sm '],
    ['sn ','sn '],
    ['snc','snc'],
    ['so ','so '],
    ['so#','so#'],
    ['sou','sou'],
    ['sp ','sp '],
    ['sp#','sp#'],
    ['spa','spa'],
    ['spc','spc'],
    ['spk','spk'],
    ['spu','spu'],
    ['spx','spx'],
    ['sq ','sq '],
    ['sq#','sq#'],
    ['sr ','sr '],
    ['sr#','sr#'],
    ['ss ','ss '],
    ['st ','st '],
    ['st#','st#'],
    ['stc','stc'],
    ['sth','sth'],
    ['stk','stk'],
    ['stl','stl'],
    ['str','str'],
    ['sts','sts'],
    ['stu','stu'],
    ['su ','su '],
    ['su#','su#'],
    ['sui','sui'],
    ['sv ','sv '],
    ['sw ','sw '],
    ['sw#','sw#'],
    ['swe','swe'],
    ['sw|','sw '],
    ['sx ','sx '],
    ['sx#','sx#'],
    ['sy ','sy '],
    ['sy#','sy#'],
    ['syk','syk'],
    ['syu','syu'],
    ['sz ','sz '],
    ['sz#','sz#'],
    ['szq','szq'],
    ['szs','szs'],
    ['szu','szu'],
    ['t  ','t  '],
    ['ta ','ta '],
    ['tam','tam'],
    ['tar','tar'],
    ['tc ','tc '],
    ['tcu','tcu'],
    ['ter','ter'],
    ['teu','teu'],
    ['tg ','tg '],
    ['tg#','tg#'],
    ['th ','th '],
    ['th#','th#'],
    ['tha','tha'],
    ['thq','thq'],
    ['thu','thu'],
    ['ti ','ti '],
    ['ti#','ti#'],
    ['tii','tii'],
    ['tiu','tiu'],
    ['tjr','tjr'],
    ['tk ','tk '],
    ['tkr','tkr'],
    ['tl ','tl '],
    ['tl#','tl#'],
    ['tm#','tm#'],
    ['tma','tma'],
    ['tn ','tn '],
    ['tn#','tn#'],
    ['tnu','tnu'],
    ['tnw','tnw'],
    ['to ','to '],
    ['toc','toc'],
    ['tor','tor'],
    ['tou','tou'],
    ['tr ','tr '],
    ['tr#','tr#'],
    ['tru','tru'],
    ['ts ','ts '],
    ['ts#','ts#'],
    ['tt ','tt '],
    ['tt#','tt#'],
    ['ttu','ttu'],
    ['tu ','tu '],
    ['tu#','tu#'],
    ['tun','tun'],
    ['tur','tur'],
    ['tus','tus'],
    ['tut','tut'],
    ['tuu','tuu'],
    ['tv ','tv '],
    ['tw ','tw '],
    ['twu','twu'],
    ['tx ','tx '],
    ['tx#','tx#'],
    ['txa','txa'],
    ['txn','txn'],
    ['txu','txu'],
    ['txw','txw'],
    ['tz ','tz '],
    ['tz#','tz#'],
    ['tzr','tzr'],
    ['u  ','u  '],
    ['u00','   '],
    ['ua ','ua '],
    ['ua#','ua#'],
    ['uar','uar'],
    ['uau','uau'],
    ['ub ','ub '],
    ['uc ','uc '],
    ['ucu','ucu'],
    ['ue ','ue '],
    ['ug ','ug '],
    ['ug#','ug#'],
    ['uhr','uhr'],
    ['uhu','uhu'],
    ['ui ','ui '],
    ['uia','uia'],
    ['uik','uik'],
    ['uk ','uk '],
    ['uk#','uk#'],
    ['uke','uke'],
    ['ukk','ukk'],
    ['ukm','ukm'],
    ['ukn','ukn'],
    ['ukr','ukr'],
    ['uks','uks'],
    ['uku','uku'],
    ['ul ','ul '],
    ['ulb','ulb'],
    ['ulk','ulk'],
    ['ulu','ulu'],
    ['um ','um '],
    ['umi','umi'],
    ['umu','umu'],
    ['un ','un '],
    ['un#','un#'],
    ['unc','unc'],
    ['und','und'],
    ['une','une'],
    ['unk','unk'],
    ['unr','unr'],
    ['unt','unt'],
    ['unu','unu'],
    ['up ','up '],
    ['upa','upa'],
    ['ur ','ur '],
    ['ur#','ur#'],
    ['urk','urk'],
    ['urr','urr'],
    ['urs','urs'],
    ['uru','uru'],
    ['us ','xxu'],
    ['us#','xxu'],
    ['usa','xxu'],
    ['use','xxu'],
    ['usu','xxu'],
    ['usv','xxu'],
    ['usx','xxu'],
    ['ut ','ut '],
    ['uta','uta'],
    ['utu','utu'],
    ['uu ','uu '],
    ['uur','uur'],
    ['uuu','uuu'],
    ['uv ','uv '],
    ['uv#','uv#'],
    ['uy ','uy '],
    ['uy#','uy#'],
    ['uyu','uyu'],
    ['uz ','uz '],
    ['uz#','uz#'],
    ['uzb','uzb'],
    ['uzr','uzr'],
    ['v  ','v  '],
    ['v 0','v 0'],
    ['va ','va '],
    ['va#','va#'],
    ['vac','vac'],
    ['van','van'],
    ['vau','vau'],
    ['vav','vav'],
    ['vaw','vaw'],
    ['vb ','vb '],
    ['vb#','vb#'],
    ['vbk','vbk'],
    ['vc ','vc '],
    ['vc#','vc#'],
    ['vdu','vdu'],
    ['ve ','ve '],
    ['ve#','ve#'],
    ['ven','ven'],
    ['veu','veu'],
    ['vi ','vi '],
    ['vic','vic'],
    ['viu','viu'],
    ['vm ','vm '],
    ['vm#','vm#'],
    ['vmr','vmr'],
    ['vn ','vn '],
    ['vn#','vn#'],
    ['vnq','vnq'],
    ['vou','vou'],
    ['vp ','vp '],
    ['vp#','vp#'],
    ['vpu','vpu'],
    ['vra','vra'],
    ['vrm','vrm'],
    ['vs ','vs '],
    ['vs#','vs#'],
    ['vt ','vt '],
    ['vt#','vt#'],
    ['vtu','vtu'],
    ['vty','vty'],
    ['vvm','vvm'],
    ['vy ','vy '],
    ['vyu','vyu'],
    ['w  ','w  '],
    ['w #','w #'],
    ['w a','w a'],
    ['wa ','wa '],
    ['wak','wak'],
    ['wan','wan'],
    ['was','was'],
    ['wau','wau'],
    ['wav','wav'],
    ['way','way'],
    ['wb ','wb '],
    ['wb#','wb#'],
    ['wb*','wb*'],
    ['wdc','wdc'],
    ['wdu','wdu'],
    ['we ','we '],
    ['wea','wea'],
    ['wek','wek'],
    ['wf ','wf '],
    ['wfu','wfu'],
    ['wg ','wg '],
    ['wg#','wg#'],
    ['wgb','wgb'],
    ['wgw','wgw'],
    ['wi ','wi '],
    ['wi#','wi#'],
    ['wik','wik'],
    ['win','win'],
    ['wiu','wiu'],
    ['wiv','wiv'],
    ['wiw','wiw'],
    ['wj ','wj '],
    ['wk ','wk '],
    ['wl ','wl '],
    ['wli','wli'],
    ['wlk','wlk'],
    ['wr ','wr '],
    ['wru','wru'],
    ['ws ','ws '],
    ['wsu','wsu'],
    ['wv ','wv '],
    ['wv#','wv#'],
    ['wva','wva'],
    ['wvu','wvu'],
    ['wvv','wvv'],
    ['wvw','wvw'],
    ['wyo','wyo'],
    ['wyu','wyu'],
    ['x  ','x  '],
    ['x a','x a'],
    ['xa ','xa '],
    ['xau','xau'],
    ['xb ','xb '],
    ['xc ','xc '],
    ['xd ','xd '],
    ['xe ','xe '],
    ['xf ','xf '],
    ['xfr','xfr'],
    ['xh ','xh '],
    ['xi ','xi '],
    ['xj ','xj '],
    ['xk ','xk '],
    ['xk#','xk#'],
    ['xl ','xl '],
    ['xm ','xm '],
    ['xn ','xn '],
    ['xna','xna'],
    ['xo ','xo '],
    ['xo#','xo#'],
    ['xoa','xoa'],
    ['xp ','xp '],
    ['xr ','xr '],
    ['xr#','xr#'],
    ['xr0','xr0'],
    ['xra','xra'],
    ['xs ','xs '],
    ['xt ','xt '],
    ['xu ','xu '],
    ['xv ','xv '],
    ['xv#','xv#'],
    ['xx ','xx '],
    ['xx#','xx#'],
    ['xx-','xx-'],
    ['xx?','xx '],
    ['xxa','xxa'],
    ['xxb','xxb'],
    ['xxc','xxc'],
    ['xxd','xxd'],
    ['xxe','xxe'],
    ['xxk','xxk'],
    ['xxp','xxp'],
    ['xxq','xxq'],
    ['xxr','xxr'],
    ['xxs','xxs'],
    ['xxu','xxu'],
    ['xxv','xxv'],
    ['xxx','xxx'],
    ['xx|','xx '],
    ['xy ','xy '],
    ['xz ','xz '],
    ['y  ','y  '],
    ['yag','yag'],
    ['ye ','ye '],
    ['ye#','ye#'],
    ['yer','yer'],
    ['yid','yid'],
    ['ykc','ykc'],
    ['yn ','yn '],
    ['ys ','ys '],
    ['ysq','ysq'],
    ['yu ','yu '],
    ['yu#','yu#'],
    ['yuc','yuc'],
    ['yug','yug'],
    ['yuk','yuk'],
    ['yw ','yw '],
    ['za ','za '],
    ['za#','za#'],
    ['zi ','zi '],
    ['zm ','zm '],
    ['zz ','zz '],
    [']]]','   '],
    ['||u','  u'],
    ['|||','   ']
  ];
  my @mapped = map { {'008' => $_->[0], 'pub_place' => $_->[1]}; } @$tests;
  write_json(\@mapped, 'clean_pub_place_tests.json');
}
