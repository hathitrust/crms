#!/usr/bin/perl

use strict;
use utf8;

BEGIN {
  die "SDRROOT environment variable not set" unless defined $ENV{'SDRROOT'};
  use lib $ENV{'SDRROOT'} . '/crms/cgi';
}

use CGI;
use JSON::XS;

use CRMS;

my $cgi  = new CGI;
my $sys  = $cgi->param('sys') || 'crms';
my $crms = CRMS->new(cgi => $cgi,
                     sys => $sys);
my %data;
my @errs;
my $q = $cgi->param('q');
if ($q eq 'setProjectProperty')
{
  my $id = $cgi->param('id');
  $id = undef if $id eq '0' or $id eq '';
  my $prop = $cgi->param('property');
  $crms->Note("Set property $prop for $id");
  my @values = split ',', $cgi->param('value');
  if ($prop eq 'users')
  {
    $crms->SetProjectUsers($id, @values);
  }
  else
  {
    my $table = 'project'. $prop;
    my %map = ('rights' => 'rights', 'categories' => 'category',
               'authorities' => 'authority', 'users' => 'user');
    my ($f1, $f2) = ('project', $map{$prop});
    my $sql = 'DELETE FROM '. $table. ' WHERE '. $f1;
    $sql .= (defined $id)? '=?':' IS NULL';
    my @args = ($id);
    @args = () unless defined $id;
    $crms->PrepareSubmitSql($sql, @args);
    foreach my $value (@values)
    {
      $crms->PrepareSubmitSql('INSERT INTO '. $table. ' ('.$f1. ','. $f2. ') VALUES (?,?)', $id, $value);
    }
  }
}
elsif ($q eq 'getProjects')
{
  my $ref = $crms->GetProjectsRef(1);
  $data{'projects'} = $ref;
}
push @errs, $_ for @{$crms->GetErrors()};
$data{'error'} = ucfirst join ';', @errs if scalar @errs;
print $cgi->header(-type=>'application/json', -charset=>'utf-8');
my $json = JSON::XS->new->encode(\%data);
print $json;

