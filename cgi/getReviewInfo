#!/usr/bin/perl

use strict;
use FindBin;
use lib $FindBin::Bin;
use CGI;
use CRMS;
use JSON::XS;

my $cgi = new CGI;
my $sys = $cgi->param('sys') || 'crms';
my $crms = CRMS->new(cgi => $cgi,
                     sys => $sys,
                     pdb => $cgi->param('pdb'),
                     tdb => $cgi->param('tdb'));

my $id = $cgi->param('id');
my $user = $cgi->param('user');
#my $proj = $crms->SimpleSqlGet('SELECT project FROM queue WHERE id=?', $id);
my $sql = 'SELECT attr,reason,note,category,renNum,renDate FROM reviews WHERE id=? AND user=?';
my $row = $crms->SelectAll($sql, $id, $user)->[0];
my %data;
# FIXME: this may need to be made project-sensitive.
$data{'rights'} = $crms->GetCodeFromAttrReason($row->[0], $row->[1]);
# If the rights attr is not und (5) then run a rights prediction
if ($crms->Sys() eq 'crmsworld' && $row->[0] != $crms->TranslateAttr('und'))
{
  $data{'rights'} = $crms->PredictRights($id, $row->[5], $row->[4],
                                         $crms->TolerantCompare($row->[3],
                                                                'Crown Copyright'));
}
$data{'note'} = $row->[2];
$data{'category'} = $row->[3];
$data{'renNum'} = $row->[4];
$data{'renDate'} = $row->[5];
$data{'sql'} = $sql;
my $json = JSON::XS->new->encode(\%data);
print $cgi->header(-type => 'application/json', -charset => 'utf-8');
print $json;

