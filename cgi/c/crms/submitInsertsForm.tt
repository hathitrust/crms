<script type="text/javascript">
<!--
window.onerror = function(msg, url, line, col, error) {
   // Note that col & error are new to the HTML 5 spec and may not be
   // supported in every browser.  It worked for me in Chrome.
   var extra = !col ? '' : '\ncolumn: ' + col;
   extra += !error ? '' : '\nerror: ' + error;
   // You can view the information in an alert to see things working like this:
   alert("Error: " + msg + "\nurl: " + url + "\nline: " + line + extra);
   // TODO: Report this error via ajax so you can keep track
   //       of what pages have JS issues
   var suppressErrorAlert = true;
   // If you return true, then error alerts (like in older versions of
   // Internet Explorer) will be suppressed.
   return suppressErrorAlert;
};

String.prototype.replaceAll = function(search, replace)
{
  if (replace === undefined) return this.toString();
  return this.split(search).join(replace);
}

var gNInserts = 0;
var gNRows = 0;
var gTypeSelect = '<select id="__PRE__type" name="__PRE__type" title="Insert Type" class="review" onchange="restartTime(__PRE__);">'+
                  '<option value="Book">Book</option>'+
                  '<option value="Periodical contrib.">Periodical contrib.</option>'+
                  '<option value="Drama">Drama</option>'+
                  '<option value="Music">Music</option>'+
                  '<option value="Map">Map</option>'+
                  '<option value="Artwork">Artwork</option>'+
                  '<option value="Photograph">Photograph</option>'+
                  '<option value="Commercial print">Commercial print</option>'+
                  '<option value="Commercial label">Commercial label</option>'+
                  '<option value="Screenplay">Screenplay</option>'+
                  '<option value="Text quotation">Text quotation</option>'+
                  '<option value="Non-text quotation">Non-text quotation</option>'+
                  '</select>';
var gSourceSelect = '<select id="__PRE__source" name="__PRE__source" title="Renewal Source" class="review" onchange="restartTime(__PRE__);">'+
                  '<option value="Stanford">Stanford</option>'+
                  '<option value="C.O. Catalog">C.O. Catalog</option>'+
                  '<option value="CCE">CCE</option>'+
                  '</select>';
var gReasonSelect = '<select id="__PRE__reason" name="__PRE__reason"  title="Reason" class="review" onchange="restartTime(__PRE__);">'+
                  '<option value="No pub date">No pub date</option>'+
                  '<option value="No pub source">No pub source</option>'+
                  '<option value="Holder unidentified">Holder unidentified</option>'+
                  '</select>';
var gPrevPubHelp = '<a class="tip" href="#">'+
                  '<img width="10" height="10" alt="Rights/Reason Help" src="/c/crms/help.png"/>'+
                  '<span>If the credit for the insert indicates<br/>'+
                        'that the insert was published in an<br/>'+
                        'earlier publication, please provide<br/>'+
                        'the title of the earlier<br/>'+
                        'publication.'+
                  '</span></a> ';
var gTypeHelp =   '<a class="tip" href="#">'+
                  '<img width="10" height="10" alt="Rights/Reason Help" src="/c/crms/help.png"/>'+
                  '<span>Select "Book" if the insert consists of<br/>'+
                        'poetry, short stories, or other text that<br/>'+
                        'came from a prior book publication.<br/>'+
                        'Otherwise, choose the category that<br/>'+
                        'most accurately describes the insert.<br/>'+
                        'Please let us know if the type of insert<br/>'+
                        'you are reviewing is not appropriately<br/>'+
                        'represented in this list.'+
                  '</span></a> ';
var gRenHelp =   '<a class="tip" href="#">'+
                  '<img width="10" height="10" alt="Rights/Reason Help" src="/c/crms/help.png"/>'+
                  '<span>Select "Not enough information" when<br/>'+
                        'you do not have enough information<br/>'+
                        'or sufficient context to search for<br/>'+
                        'a renewal record.'+
                  '</span></a> ';
var gRestoredHelp = '<a class="tip" href="#">'+
                    '<img width="10" height="10" alt="Restoration Help" src="/c/crms/help.png"/>'+
                    '<span>Check this box if you believe the<br/>'+
                          'insert is likely to be subject to<br/>'+
                          'copyright restoration. See <br/>'+
                          'training packet for more information.'+
                    '</span></a> ';
var gTimers = {};
var gInterval;
var gIntervalFor;
function AddInsert(activate)
{
  var ok = true;
  if (activate)
  {
    ok = ValidateForm();
    if (!ok) { return; }
    SubmitInserts(0);
  }
  if (gNInserts == 0)
  {
    ToggleRenewal(1);
  }
  table = document.getElementById('InsertsTable');
  table.style.display='block';
  div = document.getElementById('HoldDiv');
  div.style.display='block';
  var prefix = gNInserts + 1;
  var row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  var cell = row.insertCell(0);
  if (gNInserts > 0)
  {
    cell.style.borderTop = '1px solid #000000';
  }
  cell.innerHTML = "<strong>Insert " + (gNInserts + 1) + "</strong>" +
                   '&nbsp;<button type="button" onclick="ToggleInsert('+prefix+',0);" id="'+prefix+'Disclosure">&#x25BC;</button>';
  cell = row.insertCell(1);
  if (gNInserts > 0)
  {
    cell.style.borderTop = '1px solid #000000';
  }
  cell.innerHTML = 'page#: <input type="text" id="'+prefix+'page" name="'+prefix+'page" size="8" required="required" onfocus="restartTime('+prefix+');"/>';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = '<strong>Author:</strong>';
  cell = row.insertCell(1);
  cell.innerHTML = '<input type="text" id="'+prefix+'author" name="'+prefix+'author" onfocus="restartTime('+prefix+');"/>';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = '<strong>Title:</strong>';
  cell = row.insertCell(1);
  cell.innerHTML = '<input type="text" id="'+prefix+'title" name="'+prefix+'title" onfocus="restartTime('+prefix+');"/>';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = '<strong>Pub Date:</strong>';
  cell = row.insertCell(1);
  cell.innerHTML = '<input type="text" id="'+prefix+'pub_date" name="'+prefix+'pub_date" onfocus="restartTime('+prefix+');"/>';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = gPrevPubHelp+'<strong>Prev. Pub? </strong>';
  cell.style.whiteSpace = 'nowrap';
  cell = row.insertCell(1);
  cell.innerHTML = '<input type="text" id="'+prefix+'pub_history" name="'+prefix+'pub_history" onfocus="restartTime('+prefix+');"/>';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = gTypeHelp+'<strong>Insert Type: </strong>';
  cell = row.insertCell(1);
  cell.innerHTML = gTypeSelect.replaceAll("__PRE__", prefix);
  //row = table.insertRow(gNRows);
  //gNRows++;
  //cell = row.insertCell(0);
  //cell.innerHTML = '<strong>Other Type: </strong>';
  //cell = row.insertCell(1);
  //cell.innerHTML = '<input type="text" id="'+prefix+'other_type" name="'+prefix+'other_type"/>';
  //row.id = prefix+'otherRow';
  //row.style.display = 'none';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = gRenHelp+'<strong>Was a renewal record found?</strong>';
  cell.colSpan = 2;
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = '<input type="radio" id="'+prefix+'renewed2" name="'+prefix+'renewed" value="2" checked="checked" onchange="CalcRenewal('+prefix+');restartTime('+prefix+');"/><label for="'+prefix+'renewed2"/> Not enough information</label>';
  cell.colSpan = 2;
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = '<input type="radio" id="'+prefix+'renewed1" name="'+prefix+'renewed" value="1" onchange="CalcRenewal('+prefix+');restartTime('+prefix+');"/><label for="'+prefix+'renewed1"> Yes</label>';
  cell = row.insertCell(1);
  cell.innerHTML = '<input type="radio" id="'+prefix+'renewed0" name="'+prefix+'renewed" value="0" onchange="CalcRenewal('+prefix+');restartTime('+prefix+');"/><label for="'+prefix+'renewed0"> No</label>';
  row = table.insertRow(gNRows);
  gNRows++;
  cell = row.insertCell(0);
  cell.innerHTML = '<strong><label for="'+prefix+'renNum">Renewal&nbsp;ID: </label></strong>';
  cell = row.insertCell(1);
  cell.innerHTML = '<input type="text" title="Stanford Renewal Number" id="'+prefix+'renNum" name="'+prefix+'renNum" size="8" onfocus="restartTime('+prefix+');"/>';
  row.id = prefix+'renNumRow';
  row.style.display = 'none';
  row = table.insertRow(gNRows);
  gNRows++;
  cell = row.insertCell(0);
  cell.colSpan = 2;
  cell.innerHTML = '<strong>Renewal&nbsp;Date:</strong>';
  row.id = prefix+'renDateLabelRow';
  row.style.display = 'none';
  row = table.insertRow(gNRows);
  gNRows++;
  cell = row.insertCell(0);
  cell.colSpan = 2;
  cell.innerHTML = '<input type="text" title="Renewal Month" id="'+prefix+'renDateM" name="'+prefix+'renDateM" size="3" placeholder="MM" onfocus="restartTime('+prefix+');"/>'+
                   ' <input type="text" title="Renewal Day" id="'+prefix+'renDateD" name="'+prefix+'renDateD" size="3" placeholder="DD" onfocus="restartTime('+prefix+');"/>'+
                   ' <input type="text" title="Renewal Year" id="'+prefix+'renDateY" name="'+prefix+'renDateY" size="5" placeholder="YYYY" onfocus="restartTime('+prefix+');"/>';
  row.id = prefix+'renDateRow';
  row.style.display = 'none';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = '<strong>Source:</strong>';
  cell = row.insertCell(1);
  cell.innerHTML = gSourceSelect.replaceAll("__PRE__", prefix);
  row.style.display = 'none';
  row.id = prefix + 'sourceRow';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.innerHTML = '<strong>Reason:</strong>';
  cell = row.insertCell(1);
  cell.innerHTML = gReasonSelect.replaceAll("__PRE__", prefix);
  row.id = prefix + 'reasonRow';
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.style.whiteSpace = 'nowrap';
  cell.innerHTML = '<strong>Timer: </strong><span id="'+prefix+'timerSpan"></span>'+
                   '<input type="hidden" id="'+prefix+'timer" name="'+prefix+'timer"/>';
  cell = row.insertCell(1);
  cell.innerHTML = '<input type="button" value="Resume" onclick="javascript:restartTime(\''+prefix+'\');"/>';
  if (activate) { startTime(prefix); }
  row = table.insertRow(gNRows);
  gNRows++;
  row.id = prefix+'Row'+gNRows;
  cell = row.insertCell(0);
  cell.colSpan = 2;
  cell.innerHTML = gRestoredHelp+'<label for="'+prefix+'restored"><strong>Copyright was likely restored</strong></label>';
  //cell = row.insertCell(1);
  cell.innerHTML+='<input type="checkbox" id="'+prefix+'restored" name="'+prefix+'restored" value="1" onclick="javascript:restartTime('+prefix+');"/>';
  gNInserts++;
  document.getElementById('insertCount').value = gNInserts;
  if (gNInserts > 1)
  {
    //alert("going to toggle "+(gNInserts-1));
    ToggleInsert(gNInserts - 1, 1);
  }
  var objDiv = document.getElementById('divNav');
  objDiv.scrollTop = objDiv.scrollHeight;
}

function startTime(i)
{
  gTimers[i+'timer'] = new Date();
  updateTime(i);
  if (gInterval) { clearInterval(gInterval); }
  gInterval = setInterval(function(){updateTime(i)},500);
  gIntervalFor = i;
  var span = document.getElementById(i + 'timerSpan');
  if (span) { span.style.color = 'rgb(255,0,0)'; }
}

function stopTime(i)
{
  if (gInterval && gIntervalFor == i)
  {
    clearInterval(gInterval);
    gIntervalFor = 0;
    var span = document.getElementById(i + 'timerSpan');
    if (span) { span.style.color = 'rgb(0,0,0)'; }
  }
}

function restartTime(i)
{
  var now = new Date();
  var input = document.getElementById(i+'timer').value;
  var parts = input.split(':');
  var delta = new Date(now.getFullYear(), now.getMonth(), now.getDay(),
                       parts[0], parts[1], parts[2]).valueOf() - (now.getTimezoneOffset() * 60000);
  var d = new Date(new Date() - delta);
  gTimers[i+'timer'] = d;
  updateTime(i);
  if (gInterval) { clearInterval(gInterval); }
  if (gIntervalFor > 0)
  {
    var span = document.getElementById(gIntervalFor + 'timerSpan');
    if (span) { span.style.color = 'rgb(0,0,0)'; }
  }
  gInterval = setInterval(function(){updateTime(i)},500);
  gIntervalFor = i;
  var span = document.getElementById(i + 'timerSpan');
  if (span) { span.style.color = 'rgb(255,0,0)'; }
}

function updateTime(i)
{
  var now = new Date();
  var d = new Date(now - gTimers[i+'timer']);
  var h = d.getUTCHours();
  var m = d.getUTCMinutes();
  var s = d.getUTCSeconds();
  m = checkTime(m);
  s = checkTime(s);
  document.getElementById(i+'timerSpan').innerHTML = h+":"+m+":"+s;
  document.getElementById(i+'timer').value = h+":"+m+":"+s;
}

function checkTime(i)
{
  if (i<10) {i = "0" + i;} // add zero in front of numbers < 10
  return i;
}

function ToggleInsert(prefix, forceClose)
{
  var right = '\u25B6';
  var down = '\u25BC';
  var butt = document.getElementById(prefix+'Disclosure');
  var show = (forceClose)? false:(butt.innerHTML == right);
  var table = document.getElementById("InsertsTable");
  var j = 0;
  var disp = (show)? 'table-row':'none';
  var re = new RegExp('^('+prefix+')\\D+');
  for (var i = 0, row; row = table.rows[i]; i++)
  {
    var match = re.exec(row.id);
    if (match)
    {
      if (match[1] == prefix)
      {
        if (j > 0)
        {
          row.style.display = disp;
        }
        j++;
      }
      if (match[1] > prefix)
      {
        break;
      }
    }
  }
  if (show)
  {
    CalcRenewal(prefix);
    restartTime(prefix);
  }
  else
  {
    stopTime(prefix);
  }
  butt.innerHTML = (show)? down:right;
}

function DeleteLastInsert()
{
  if (confirm("Are you sure you want to delete the last insert? This cannot be undone."))
  {
    stopTime(gNInserts);
    var table = document.getElementById("InsertsTable");
    var re = new RegExp('^('+gNInserts+')\\D+');
    var i = 0;
    while (row = table.rows[++i])
    {
      var match = re.exec(row.id);
      if (match)
      {
        if (match[1] == gNInserts)
        {
          table.deleteRow(i);
          gNRows--;
          i--;
        }
      }
    }
    gNInserts--;
    document.getElementById('insertCount').value = gNInserts;
  }
  SubmitInserts(false);
}

function ToggleRenewal(forceClose)
{
  var right = '\u25B6';
  var down = '\u25BC';
  var butt = document.getElementById('Disclosure');
  var show = (forceClose)? false:(butt.innerHTML == right);
  var disp = (show)? 'table-row':'none';
  var ids = ['RenewalRow0','RenewalDataRow0','RenewalDataRow1','RenewalDataRow2',
             'CountDataRow0','CountDataRow1','CountDataRow2','CountDataRow3'];
  for (var i = 0; i < ids.length; i++)
  {
    var div = document.getElementById(ids[i]);
    div.style.display = disp;
  }
  butt.innerHTML = (show)? down:right;
}

function EnableRenewal(enable)
{
  var div = document.getElementById('RenewalDataDiv');
  div.style.display = (enable)? 'block':'none';
  if (!enable)
  {
    var input = document.getElementById('0renNum');
    input.value = '';
    input = document.getElementById('0renDateM');
    input.value = '';
    input = document.getElementById('0renDateD');
    input.value = '';
    input = document.getElementById('0renDateY');
    input.value = '';
  }
}

function CalcRenewal(prefix)
{
  var el = document.getElementById(prefix+'renewed1');
  var disp = (el.checked)? 'table-row':'none';
  var row = document.getElementById(prefix+'renNumRow');
  row.style.display = disp;
  row = document.getElementById(prefix+'renDateLabelRow');
  row.style.display = disp;
  row = document.getElementById(prefix+'renDateRow');
  row.style.display = disp;
  row = document.getElementById(prefix+'sourceRow');
  row.style.display = disp;
  el = document.getElementById(prefix+'renewed2');
  row = document.getElementById(prefix+'reasonRow');
  disp = (el.checked)? 'table-row':'none';
  row.style.display = disp;
  //row = document.getElementById(prefix+'reasonSelectRow');
  //row.style.display = disp;
}

//function EnableOther(prefix)
//{
//  var el = document.getElementById(prefix+'otherType');
//  var row = document.getElementById(prefix+'otherRow');
//  //alert(el+', '+el.selected);
//  row.style.display = (el.selected)? 'table-row':'none';
//}

function LoadInserts(id, user)
{
  var req = new XMLHttpRequest();
  var url = "/cgi/c/crms/getInsertsInfo?id=" + id + ";user=" + user;
  req.onreadystatechange = function()
  {
    if (req.readyState == 4)
    {
      if (req.status == 200)
      {
        //alert("LoadInserts("+id+","+user+") succeeded:"+req.status);
        PopulateInserts(req.responseText);
      }
      else
      {
        alert("Error: "+url+" failed:"+req.status);
      }
    }
  };
  req.open("GET", url, true);
  req.send(null);
}

function PopulateInserts(data)
{
  var obj = JSON.parse(data);
  var n = Object.keys(obj).length;
  for (var i = 1; i <= n; i++)
  {
    AddInsert(0);
    PopulateInsert(i, obj[i]);
  }
  if (gNInserts > 0)
  {
    restartTime(gNInserts);
  }
}

function PopulateInsert(iid, data)
{
  var keys = Object.keys(data);
  //alert(keys);
  for (var key in keys)
  {
    val = data[keys[key]];
    var el = document.getElementById(iid+keys[key]);
    if (el)
    {
      if (keys[key] == 'restored')
      {
        //alert(el+":"+keys[key]+","+val);
        if (val == 1) { el.checked='checked'; }
        val = 1;
      }
      el.value = val;
    }
    //else alert(iid+""+keys[key]);
  }
  val = document.getElementById(iid+'timer').value;
  var parts = val.split(':');
  if (parts[0].length == 2 && parts[0].charAt(0) == '0')
    val = parts[0].charAt(1)+':'+parts[1]+':'+parts[2];
  document.getElementById(iid+'timerSpan').textContent = val;
  val = data['renewed'];
  document.getElementById(iid+'renewed'+val).checked='checked';
  //EnableOther(iid);
  CalcRenewal(iid);
}

function ValidateForm()
{
  var valid = true;
  var i;
  try
  {
    for (i=0; i <= gNInserts; i++)
    {
      var err = validateInsert(i);
      if (err)
      {
        alert(err);
        return false;
      }
    }
  }
  catch (e)
  {
    alert(e);
    return false;
  }
  return true;
}

function validateInsert(i)
{
  var numeric = /^\d+$/;
  var el;
  if (i > 0)
  {
    el = document.getElementById(i+'page');
    if (!el.value.match(numeric))
    {
      el.select();
      return 'Insert #'+i+' page number not numeric.';
    }
    el = document.getElementById(i+'pub_date');
    if (el.value.length > 0 && !el.value.match(numeric))
    {
      el.select();
      return 'Insert #'+i+' pub date not numeric.';
    }
  }
  el = document.getElementById(i+'renDateM');
  if (el.value.length > 0)
  {
    if (!el.value.match(numeric))
    {
      el.select();
      return 'Insert #'+i+' renewal month not numeric.';
    }
    var val = checkTime(el.value);
    if (val != el.value)
    {
      el.value = val;
    }
  }
  el = document.getElementById(i+'renDateD');
  if (el.value.length > 0)
  {
    if (!el.value.match(numeric))
    {
      el.select();
      return 'Insert #'+i+' renewal day not numeric.';
    }
    var val = checkTime(el.value);
    if (val != el.value)
    {
      el.value = val;
    }
  }
  el = document.getElementById(i+'renDateY');
  if (el.value.length > 0)
  {
    if (!el.value.match(numeric))
    {
      el.select();
      return 'Insert #'+i+' renewal year not numeric.';
    }
  }
}

function SubmitInserts(fini)
{
  if (ValidateForm())
  {
    var loader = document.getElementById('loader');
    if (loader) { loader.style.display=''; }
    if (fini)
    {
      var fi = document.getElementById('finalInput');
      if (fi) { fi.value ='1'; }
    }
    var form = document.getElementById('submitInsertsForm');
    var data = new FormData(form);
    var xhr = new XMLHttpRequest();
    var url = "/cgi/c/crms/submitInserts";
    xhr.open('POST', url, true);
    //xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
    //var str = JSON.stringify(data);
    xhr.send(data);
    //alert(data);
    xhr.onreadystatechange = function()
    {
      if (xhr.readyState == 4)
      {
        if (xhr.status == 200)
        {
          if (fini)
          {
            window.location.href = "[% crms.Sysify('inserts?p=inserts') %]";
          }
          else
          {
            var sel = document.getElementById("search1Select");
            if (sel.options[sel.selectedIndex].text == 'Summary')
            {
              document.getElementById('tFrame').contentWindow.location.reload();
            }
            else
            {
              sel = document.getElementById("search2Select");
              if (sel.options[sel.selectedIndex].text == 'Summary')
              {
                document.getElementById('bFrame').contentWindow.location.reload();
              }
            }
          }
          //alert("SubmitInserts("+fini+") to " + url + " succeeded:"+xhr.status+"\n"+xhr.responseText);
        }
        else
        {
          alert("Error: "+url+" failed:"+xhr.status+"\n"+xhr.responseText);
        }
      }
      if (loader) { loader.style.display='none'; }
    };
  }
}

window.onload = function(e)
{
  changeFrame1();
  changeFrame2();
  [% IF 1 #editing OR error %]
    LoadInserts("[% barcode %]", "[% user %]");
  [% END %]
}
-->
</script>

[% IF 1#editing %]
  [% data = inserts.GetInsertsData(barcode, user, 1) %]
[% END %]
<form id="submitInsertsForm">
  <!--input type="hidden" name="p"       value="confirmInserts"/-->
  <input type="hidden" name="barcode" value="[% barcode %]"/>
  <input type="hidden" name="start"   value="[% crms.GetNow() %]"/>
  <input type="hidden" name="user"    value="[% user %]"/>
  <input type="hidden" id="insertCount" name="count"   value="0"/>
  <input type="hidden" id="finalInput" name="final" value="0"/>
  <!--input type="hidden" name="editing" value="[% editing %]"/-->
  <input type="hidden" name="sys"     value="[% sys %]"/>
  <div class="reviewBlue">
  <table id="HTOptionsTable" class="id">
    <tr>
	    <td class="display" style="text-align:left;" colspan="2">
	      <strong>HathiTrust Options:</strong>
      </td>
    </tr>
    <tr><td colspan="2"></td></tr>
    <tr><td colspan="2"></td></tr>
    <tr>
      <td class="display" style="text-align:left;"><strong>Size:</strong></td>
      <td>
        <select title="PageTurner Size" class="review" onchange="zoom(this,'mag');">
        [% percents = [50,75,100,125,150,200] %]
        [% FOREACH p IN percents %]
          [% IF p == mag %]
            <option value="[% p %]" selected="selected">[% "$p%" %]</option>
          [% ELSE %]
            <option value="[% p %]">[% "$p%" %]</option>
          [% END %]
        [% END %]
        </select>
      </td>
    </tr>
    <tr>
      <td class="display" style="text-align:left;"><strong>View:</strong></td>
      <td>
        <select id="PTViewSelect" title="PageTurner View" class="review" onchange="zoom(this,'ptview');">
        [% views = ['image','1up','2up','thumb'] %]
        [% names = ['Classic','Scroll','Flip','Thumbnails'] %]
        [% accesskeys = ['-','=','[',']'] %]
        [% FOR i IN [0 .. 3] %]
          [% v = views.$i %]
          [% n = names.$i %]
          [% IF v == ptview %]
            <option value="[% v %]" id="view[% names.$i %]Select" selected="selected">[% n %]</option>
          [% ELSE %]
            <option value="[% v %]" id="view[% names.$i %]Select">[% n %]</option>
          [% END %]
        [% END %]
        </select>
        [% FOR i IN [0 .. 3] %]
          <a style="position:absolute;left:-999px;" href="#" accesskey="[% accesskeys.$i %]"
             onfocus="var ptvs = document.getElementById('PTViewSelect');ptvs.selectedIndex=[% i %];zoom(ptvs,'ptview');">.</a>
        [% END %]
      </td>
    </tr>
  </table>
  </div>
<div id="RenewalDiv" class="rightscont" style="padding-top:2px;">
  <div>
    <table>
      <tr>
        <td>
          <strong>Was volume renewed?</strong>
        </td>
        <td>
          <button type="button" onclick="ToggleRenewal(0);" id="Disclosure">&#x25BC;</button>
        </td>
      </tr>
      <tr id="RenewalRow0">
        [% ch1 = "" %]
        [% ch2 = 'checked="checked"' %]
        [% IF data.renewed %]
          [% ch1 = ch2 %]
          [% ch2 = "" %]
        [% END %]
        <td><input type="radio" name="0renewed" id="0renewed0" value=1 $ch1 onchange="javascript:EnableRenewal(1);"/>
            <label for="0renewed0">Yes</label>
        </td>
        <td><input type="radio" name="0renewed" id="0renewed1" value=0 $ch2 onchange="javascript:EnableRenewal(0);"/>
            <label for="0renewed1">No</label>
        </td>
      </tr>
    </table>
  </div>
  [% ch2 = 'style="display:none;"' %]
  [% IF data.renewed %]
    [% ch2 = "" %]
  [% END %]
  <div id="RenewalDataDiv" $ch2>
    <table>
      <tr id="RenewalDataRow0">
        <td class="nowrap">
          <strong><label id="renNumLabel" for="0renNum">Renewal ID: </label></strong>
        </td>
        <td class="nowrap">
          <input id="0renNum" title="Renewal ID" type="text" name="0renNum" size="8" value="[% data.renNum %]"/>
        </td>
      </tr>
      <tr id="RenewalDataRow1">
        <td class="nowrap" colspan="2">
          <strong>Renewal Date:</strong>
        </td>
      </tr>
      <tr id="RenewalDataRow2">
        <td class="nowrap" colspan="2">
          <input type="text" value="[% data.renDateM %]" title="Renewal Month" id="0renDateM" name="0renDateM" size="3" placeholder="MM"/>
          <input type="text" value="[% data.renDateD %]" title="Renewal Day" id="0renDateD" name="0renDateD" size="3" placeholder="DD"/>
          <input type="text" value="[% data.renDateY %]" title="Renewal Year" id="0renDateY" name="0renDateY" size="5" placeholder="YYYY"/>
        </td>
      </tr>
    </table>
  </div>
  <div id="CountDataDiv">
    <table>
      <tr id="CountDataRow0">
        <td>
          Estimate the number of inserts first published with this volume and not separately renewed
        </td>
      </tr>
      <tr id="CountDataRow1">
        <td>
          <input id="0estimate" title="Estimated insert count" type="text"
                 name="0estimate" size="8" value="[% data.estimate %]"/>
        </td>
      </tr>
      <tr id="CountDataRow2">
        <td>
          Number of inserts with insufficient information to perform research
        </td>
      </tr>
      <tr id="CountDataRow3">
        <td>
          <input id="0insufficient" title="Insufficient information count" type="text"
                 name="0insufficient" size="8" value="[% data.insufficient %]"/>
        </td>
      </tr>
    </table>
  </div>
</div>
[% ch1 = "" %]
[% ch2 = 'checked="checked"' %]
[% IF data.pd %]
  [% ch1 = ch2 %]
  [% ch2 = "" %]
[% END %]
<table id="InsertsTable" class="reviewGrey" style="display:none;"></table>
<div id="ButtonDiv" class="reviewBlue">
  <table class="id">
    <tr>
      <td colspan="2"><strong>Is this entire volume likely in the public domain?</strong></td>
    </tr>
    <tr>
      <td><input type="radio" name="0pd" id="0pd0" value=1 $ch1/>
          <label for="0pd0">Yes</label>
      </td>
      <td><input type="radio" name="0pd" id="0pd1" value=0 $ch2/>
          <label for="0pd1">No</label>
      </td>
    </tr>
    <tr>
      <td><input class="review" type="button" name="submit" value="Add Insert"
                 accesskey="a" onclick="javascript:AddInsert(1);"/></td>
      <td><input class="review" type="button" name="submit" value="Delete Last Insert"
                 accesskey="a" onclick="javascript:DeleteLastInsert();"/></td>
    </tr>
    <tr>
      <td>
        <input class="review" type="button" name="submit" value="Save"
               accesskey="s" onclick="javascript:SubmitInserts(0);"/>
      </td>
      <td><input class="review" type="button" name="submit" value="Save and Next"
                 onclick="javascript:SubmitInserts(1)"/></td>
    </tr>
    <tr>
      <td colspan="2" style="width=20;height=20;">
        <div id="loader" style="display:none;">Saving… <img src="/c/crms/ajax-loader.gif" alt="Saving..."/></div>
      </td>
    </tr>
  </table>
</div>
<div id="HoldDiv" class="reviewBlue" style="display:none;">
  <table class="id">
    <tr>
      <td style="text-align:left;">
        [% IF !hold %]
          [% hold = crms.HoldForItem(barcode,user) %]
        [% END %]
        <input type="checkbox" id="hold" name="hold" value="0" [% (hold)? 'checked="checked"':'' %] onclick="toggleVisibility('expiry');"/>
      </td>
      <td><label for="hold">Hold for Question</label></td>
    </tr>
    <tr>
      <td colspan="2">
        <span class="smallishText" id="expiry" [% (hold)? '':'style="display:none;"' %]>
          Hold will expire at the end of the day<br/>on [% crms.HoldExpiry(barcode,user,1) %].
        </span>
      </td>
    </tr>
    <tr>
      <td colspan="2">
        <span class="smallishText">Held reviews will remain unprocessed for 2 working days.
            It is up to you to get in touch with an expert.
        </span>
      </td>
    </tr>
  </table>
</div>

[% IF error %]
  <table class="ReviewError">
    <tr>
      <td class="reviewGrey" style="text-align:left;">
        <strong style="color:red;">Error Message:</strong>
      </td>
    </tr>
    <tr>
      <td>
	      <textarea cols="20" rows="25">[% error %]</textarea>
      </td>
    </tr>
  </table>
[% END %]

</form>
