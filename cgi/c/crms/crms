#!/usr/bin/perl

use strict;
use CGI;
use CRMS;
use Template;
use POSIX;
use Encode;

my $cgi  = new CGI;
my $sys =  $cgi->param('sys');
$sys = 'crms' unless $sys;
my $page = $cgi->param('p');
my $pdb = $cgi->param('pdb');
my $tdb = $cgi->param('tdb');
my $debugSql = $cgi->param('debugSql');
my $debugVar = $cgi->param('debugVar');
my $crms = CRMS->new(
        sys      => $sys,
        verbose  => 0,
        pdb      => $pdb,
        tdb      => $tdb,
        debugSql => $debugSql,
        debugVar => $debugVar
        );
my $cri;
if ($page eq 'cri' || $page eq 'criData' || $page eq 'confirmCRI')
{
  use CRI;
  $cri = CRI->new('crms' => $crms);
}
if ($page eq 'Logout')
{
  # Remove all locks for this user.
  # If we're aliased, we don't log out, we just drop the alias.
  my $alias = $crms->GetAlias();
  if ($alias)
  {
    $crms->UnlockAllItemsForUser($alias);
    $crms->SetAlias();
    $cgi->delete_all();
  }
  else
  {
    $crms->UnlockAllItemsForUser();
    # change 'central' to the url of your weblogin server.
    my $central = "https://weblogin.umich.edu/cgi-bin/logout";
    my $query_string = '';
    # expire and nullify service cookie
    print( "Set-Cookie: $ENV{ COSIGN_SERVICE }=null; path=/; expires=Wednesday, 27-Jan-77 00:00:00 GMT; secure\n" );
    if ( $ENV{ QUERY_STRING } =~ m|^(https?://.*)$| )
    {
      $query_string = "?$1";
    }
    # perform any local cleanup here
    # redirect to central weblogin server
    print("Location: $central$query_string\n\n");
    exit(0);
  }
}
elsif ($cgi->param('changeuser') == 1)
{
  $crms->SetAlias(undef, $cgi->param('newuser'));
  $cgi->delete_all();
}
my $user = $crms->get('user');

if ($page eq 'confirmReview')
{
  my $editing = $cgi->param('editing');
  my $id = $cgi->param('barcode');
  my $err;
  my $action = $cgi->param('submit');
  if ($action eq 'Cancel')
  {
    $crms->UnlockItem($id, $user);
    $cgi->delete_all();
  }
  else
  {
    my $EncRights = $cgi->param('rights');
    my $note      = Encode::decode("UTF-8", $cgi->param('note'));
    my $category  = $cgi->param('category');
    my $renNum    = $cgi->param('renNum');
    my $renDate   = $cgi->param('renDate');
    my $hold      = $cgi->param('hold');
    my $swiss     = $cgi->param('swiss');
    my $pre       = $cgi->param('prepopulated');
    my $start     = $cgi->param('start');
    my ($rights, $reason);
    $err = 'You must select a rights/reason combination.' unless $EncRights;
    if (!$err)
    {
      ($rights, $reason) = $crms->GetAttrReasonFromCode($EncRights);
      $err = $crms->HasItemBeenReviewedByTwoReviewers($id, $user);
      $err = $crms->ValidateSubmission($id, $user, $rights, $reason, $note, $category,
                                       $renNum, $renDate) unless $err;
      my $stat = $crms->GetSystemStatus();
      # Actually, this never gets displayed, but that's OK
      my $status = $stat->[1];
      $err = "The CRMS is not currently accepting reviews (status '$status'). Please Cancel." if $stat->[1] ne 'normal';
    }
    if (!$err)
    {
      #Process the submission, and go on to the next item
      $crms->SubmitReview($id, $user, $rights, $reason, $note, $renNum, $crms->IsUserExpert($user),
                          $renDate, $category, $swiss, $hold, $pre, $start);
      my $ref = $crms->GetErrors();
      $err = $ref->[0] if $ref && $ref->[0];
    }
    if ($err)
    {
      $crms->ClearErrors();
      $cgi->param('errorMsg', $err);
      $cgi->param('p', 'review');
    }
    else
    {
      $crms->PropagateTheFormula($id, $user) if $action eq 'Propagate';
      # Unused parameter to support submitting last review before leaving the system.
      my $home = $cgi->param('subHome');
      $cgi->delete_all();
      if (!$home)
      {
        $cgi->param('p', 'review');
      }
    }
  }
  if ($editing && !$err)
  {
    print "Content-type: text/html\n\n";
    print '<script type="text/javascript">window.close();</script>';
    exit(0);
  }
}
elsif ($page eq 'confirmCorrection')
{
  my $editing = $cgi->param('editing');
  my $id = $cgi->param('barcode');
  my $err;
  if ($cgi->param('submit') eq 'Cancel')
  {
    $crms->UnlockItem($id, $user, $page);
    $cgi->delete_all();
  }
  else
  {
    my $stat = $crms->GetSystemStatus();
    my $status = $stat->[1];
    $err = "The CRMS is not currently accepting corrections (status '$status'). Please Cancel." if $stat->[1] ne 'normal';
    if (!defined $err)
    {
      use Corrections;
      $err = Corrections::ConfirmCorrection($crms, $id, $user, $cgi);
    }
    if ($err)
    {
      $cgi->param('errorMsg', $err);
      $crms->ClearErrors();
    }
    else
    {
      $cgi->delete_all();
      $cgi->param('p', 'corrections');
    }
  }
  if ($editing && !$err)
  {
    print "Content-type: text/html\n\n";
    print '<script type="text/javascript">window.close();</script>';
    exit(0);
  }
}
elsif ($page eq 'confirmCRI')
{
  my $editing = $cgi->param('editing');
  my $id = $cgi->param('htid');
  my $err;
  if ($cgi->param('submit') eq 'Cancel')
  {
    $cri->UnlockItem($id, $user);
    $cgi->delete_all();
  }
  else
  {
    my $stat = $crms->GetSystemStatus();
    my $status = $stat->[1];
    $err = "The CRMS is not currently accepting CRI (status '$status'). Please Cancel." if $stat->[1] ne 'normal';
    if (!defined $err)
    {
      if ($cgi->param('submit') eq 'Submit')
      {
        $err = $cri->ConfirmCRI($id, $user, $cgi);
      }
      elsif ($cgi->param('submit') eq 'Reject')
      {
        $err = $cri->RejectCRI($id, $user, $cgi);
      }
    }
    if ($err)
    {
      $cgi->param('errorMsg', $err);
      $crms->ClearErrors();
      $cgi->param('p', 'cri');
    }
    else
    {
      $cri->UnlockItem($id, $user);
      $cgi->delete_all();
      $cgi->param('p', 'cri');
    }
  }
  if ($editing && !$err)
  {
    print "Content-type: text/html\n\n";
    print '<script type="text/javascript">window.close();</script>';
    exit(0);
  }
}

$cgi->param('sys', $sys) if $sys and $sys ne 'crms';

if ($cgi->param('download'))
{
  use Downloads;
  exit if 1 == Downloads::Download($crms, $cgi);
}

## the template page (tt) is called based on the CGI 'p' param (ex editReviews -> editReviews.tt)
## the default is home.tt in case a tt is not found
$page = $cgi->param('p') || 'home';
if (!$crms->GetAlias())
{
  my %ips = %{$crms->GetUserIPs()};
  if (scalar keys %ips)
  {
    my $ip = $ENV{'REMOTE_ADDR'};
    if (!defined $ips{$ip} &&
        !defined $ips{'mfa'} &&
        ($crms->IsUserReviewer() ||
         $crms->IsUserAdvanced() ||
         $crms->IsUserExpert()))
    {
      $cgi->param('REMOTE_ADDR', $ip);
      $page = 'ip';
    }
  }
}
my $exp = $crms->IsUserExpired($user);
$page = 'expired' if $exp->{'status'} == 1;
if (length $page)
{
  my $dbc = $crms->AccessCheck($page);
  if (defined $dbc)
  {
    $page = 'denied';
    $cgi->param('dbc', $dbc);
  }
}
my $input = $page . '.tt';
$input = 'home.tt' unless -f $input;

## config options for TT
my $config =
{
    INCLUDE_PATH => '.',
    INTERPOLATE  => 1,     ## expand "$var" in plain text
    POST_CHOMP   => 1,     ## cleanup whitespace
    EVAL_PERL    => 1,     ## evaluate Perl code blocks
    ENCODING     => 'UTF-8'
};

my $tt   = Template->new($config);
my $vars = {
    title     => $crms->System(),
    crms      => $crms,
    cgi       => $cgi,
    user      => $user,
    yesterday => POSIX::strftime("%Y-%m-%d %H:%M:%S", localtime(time-86400))
};
$vars->{'cri'} = $cri if defined $cri;

print $cgi->header(-charset => 'utf-8', 'cache-control' => 'private');
if (!$tt->process($input, $vars))
{
  printf "<h3>%s</h3>\n", $tt->error();
  die $tt->error();
}
print $crms->Debug();
if ($cgi->param('debug'))
{
  print '<br/><br/>';
  printf 'Host: <b>%s</b><br/>', `hostname`;
  my $dbinfo = $crms->DbInfo();
  $dbinfo =~ s/\n/<br\/>/g;
  print "<i>$dbinfo</i><br/>\n";
  eval {
    foreach my $k (keys %ENV)
    {
      printf "$k: %s<br/>\n", $ENV{$k};
    }
  }
}

