#!/usr/bin/perl

my ($DLXSROOT, $DLPS_DEV);
BEGIN { $DLXSROOT = $ENV{'DLXSROOT'}; $DLPS_DEV = $ENV{'DLPS_DEV'}; }

use strict;
use CGI;
use CRMS;
use JSON::XS;
use Graph;
my $cgi  = new CGI;
my $user = $ENV{'REMOTE_USER'};
my $sys =  $cgi->param('sys');
$sys = 'crms' unless $sys;
my $crms = CRMS->new(logFile   =>   "$DLXSROOT/prep/c/crms/log_review.txt",
                     sys       =>   $sys,
                     verbose   =>   0,
                     root      =>   $DLXSROOT,
                     dev       =>   $DLPS_DEV,
                     user      =>   $user);

my $type = $cgi->param('type');
my $data = '';
my $c = $cgi->param('c'); # Class or cumulative
my $start = $cgi->param('startDate');
my $end = $cgi->param('endDate');
my $percent = $cgi->param('percent');
if ($type eq 'graph')
{
  my $monthly = $cgi->param('monthly');
  my $title = $cgi->param('title');
  if ($c == 0) { $data = Graph::CreateExportGraph($crms); }
  elsif ($c == 1) { $data = Graph::CreateExportBreakdownGraph($crms); }
  elsif ($c == 2) { $data = Graph::CreateExportsPieChart($crms); }
  elsif ($c == 3) { $data = Graph::CreateDeterminationsBreakdownGraph($crms); }
  elsif ($c == 4) { $data = Graph::CreateCandidatesGraph($crms); }
  elsif ($c == 5) { $data = Graph::CreateCountriesGraph($crms); }
  elsif ($c == 6) { $data = Graph::CreateUndGraph($crms); }
  elsif ($c == 7) { $data = Graph::CreateNamespaceGraph($crms); }
  elsif ($c == 9) { $data = Graph::CreateReviewInstitutionGraph($crms); }
  elsif ($c == 10)
  {
    my $type2 = $cgi->param('type2');
    my @users = $cgi->param('user');
    $data = Graph::CreateReviewerGraph($crms, $type2, $start, $end, @users);
  }
}
else
{
  $data = $crms->CreateExportData("\t", $c, 1, $start, $end);
}

if ( $data eq '') { print $cgi->header( -status => "400" ); }
if (ref($data))
{
  my $json = JSON::XS->new->utf8->encode($data);
  print $cgi->header('application/json');
  print $json;
}
else
{
  print $cgi->header(-type => 'text/plain', -charset => 'utf-8');
  print $data;
}
